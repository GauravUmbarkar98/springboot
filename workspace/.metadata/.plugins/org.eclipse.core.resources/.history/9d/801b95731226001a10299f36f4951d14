package util;

public class Test {
	public static void main(String[] args) {
		
		
		Animal a = new Mammal().add("tiger");
		a.walk();
				
		
	}
}

abstract class Animal
{
	abstract void walk(); //IMPLEMENTATION : walk() its mandatorily defined by the nonabstract child
	
	Animal add(String animalType) { //DERIVATION : derived by the child, and teh child may override
		Animal a = null;
		if(animalType.equalsIgnoreCase("domestic"))
			a = new Cow();
		else if(animalType.equalsIgnoreCase("wild"))
			a = new Tiger();
		return a;
	}
}

class Mammal extends Animal
{
	public void walk() {
		System.out.println("walking...mammal");
	}

}
class Cow extends Mammal
{
	public void walk() {
		System.out.println("walking...cow ");
	}

	void eatingGrass() {
		System.out.println("Cow eating grass");
	}
}
class Tiger extends Mammal
{
	public void walk() {
		System.out.println("walking...tiger");
	}

	void eatingFlesh() {
		System.out.println("Tiger eating flesh");
	}
}


/*
class FarmHouse
{
	Animal grow()
	{
		System.out.println("growing....");
	}
}*/
